from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

confirm = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text='–ù–∞–∑–≤–∞–Ω–∏–µ', callback_data= 'name_change'),
            InlineKeyboardButton(text='–û–ø–∏—Å–∞–Ω–∏–µ', callback_data='description_change'),
            InlineKeyboardButton(text='–§–æ—Ç–æ', callback_data='photo_change'),
            InlineKeyboardButton(text='–ö–Ω–æ–ø–∫–∏', callback_data='button_change'),
        ],
        [
            InlineKeyboardButton(text='–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å ‚úÖ', callback_data='good_job'),
        ]
    ],
)

update_product= InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text='–ù–∞–∑–≤–∞–Ω–∏–µ', callback_data= 'name_change'),
            InlineKeyboardButton(text='–û–ø–∏—Å–∞–Ω–∏–µ', callback_data='description_change'),
            InlineKeyboardButton(text='–§–æ—Ç–æ', callback_data='photo_change'),
            InlineKeyboardButton(text='–ö–Ω–æ–ø–∫–∏', callback_data='button_change'),
        ],
    ],
)

confirm_gallery = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text='–ù–∞–∑–≤–∞–Ω–∏–µ', callback_data= 'name_change'),
            InlineKeyboardButton(text='–§–æ—Ç–æ', callback_data='photo_change'),
            InlineKeyboardButton(text='–ö–Ω–æ–ø–∫–∏', callback_data='button_change'),
        ],
        [
            InlineKeyboardButton(text='–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å ‚úÖ', callback_data='good_job'),
        ]
    ],
)

update_gallery= InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text='–ù–∞–∑–≤–∞–Ω–∏–µ', callback_data= 'name_change'),
            InlineKeyboardButton(text='–§–æ—Ç–æ', callback_data='photo_change'),
            InlineKeyboardButton(text='–ö–Ω–æ–ø–∫–∏', callback_data='button_change'),
        ],
    ],
)

photo = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text='–°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–æ—Ç–æ üîó', callback_data= 'photo_link'),
            InlineKeyboardButton(text='–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ üñº', callback_data='upload_photo')

        ],
    ],
)

admin_keyboard_change_level = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∞', callback_data= 'change_admin_level')
        ],
    ],
)

gos = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –∏ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è', url="https://www.rezak-penoplasta-tvorec.ru/kindergartens/")
        ],
    ],
)

calculator = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text='–ù–∞–ª–æ–≥', callback_data= 'calc_tax'),
            InlineKeyboardButton(text='–ê–º–æ—Ä—Ç–∏–∑–∞—Ü–∏—è', callback_data= 'calc_amortization'),

        ],
        [
            InlineKeyboardButton(text='–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã', callback_data='calc_work'),
            InlineKeyboardButton(text='–ü—Ä–∏–±—ã–ª—å', callback_data='calc_profit')
        ],
        [
            InlineKeyboardButton(text='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚úÖ', callback_data='calc_hour')
        ],
    ],
)

calculator_eng = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text='Taxes', callback_data= 'calc_tax'),
            InlineKeyboardButton(text='Amortization', callback_data= 'calc_amortization'),

        ],
        [
            InlineKeyboardButton(text='Work cost', callback_data='calc_work'),
            InlineKeyboardButton(text='Profit', callback_data='calc_profit')
        ],
        [
            InlineKeyboardButton(text='Complete ‚úÖ', callback_data='calc_hour')
        ],
    ],
)

acrylic = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text='–î–∞ ‚úÖ', callback_data= 'acryl_1'),
            InlineKeyboardButton(text='–ù–µ—Ç ‚ùå', callback_data= 'acryl_0')

        ],
    ],
)

acrylic_eng = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text='Yes ‚úÖ', callback_data= 'acryl_1'),
            InlineKeyboardButton(text='No ‚ùå', callback_data= 'acryl_0')

        ],
    ],
)

delete = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text='–î–∞ ‚úÖ', callback_data= 'del_1'),
            InlineKeyboardButton(text='–ù–µ—Ç ‚ùå', callback_data= 'del_0')

        ],
    ],
)

mailing_key = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text='–î–∞ ‚úÖ', callback_data= 'mail_1'),
            InlineKeyboardButton(text='–ù–µ—Ç ‚ùå', callback_data= 'mail_0')

        ],
    ],
)

confirm_mailing_key = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é –æ—Ç–ø—Ä–∞–≤–∫—É ‚úÖ', callback_data= 'confirm_mail')
        ],
        [
            InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É ‚ùå', callback_data='finish_state')
        ],
    ],
)

gallery_delete = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text='–î–∞ ‚úÖ', callback_data= 'gallery_del_1'),
            InlineKeyboardButton(text='–ù–µ—Ç ‚ùå', callback_data= 'gallery_del_0')

        ],
    ],
)

confirm_poll = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text='–î–∞ ‚úÖ', callback_data= 'poll_1'),
            InlineKeyboardButton(text='–ù–µ—Ç ‚ùå', callback_data= 'poll_0')

        ],
    ],
)

web = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(
            text='–ü–æ—Å–µ—Ç–∏—Ç–µ –Ω–∞—à —Å–∞–π—Ç',
            url='https://www.rezak-penoplasta-tvorec.ru/'
        ),
    ],
])

deactivate = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å ‚ùå', callback_data='finish_state')
    ],
])

deactivate_eng = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(text='Cancel ‚ùå', callback_data='finish_state')
    ],
])

def like_keyboard(likes, user_id, uin, builder, counter):
    if (len(likes) > 0) and (str(likes).count(' ')) > 0:
        if str(user_id) in likes:
            return builder.button(text=f'Ô∏è{counter} ‚ù§Ô∏è', callback_data=f'like{uin}',)
        else:
            return builder.button(text=f'Ô∏è{counter} ü§ç', callback_data=f'like{uin}')
    elif str(likes) == str(user_id):
        return builder.button(text=f'{counter} ‚ù§Ô∏è', callback_data=f'like{uin}')
    else:
        return builder.button(text=f'Ô∏è{counter} ü§ç', callback_data=f'like{uin}')

def admin_keyboard(prv, nxt, uin, builder):
    if prv == '–ù–∞—á–∞–ª–æ':
        page = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å —Å–ª–µ–¥—É—é—â—É—é –∫–∞—Ä—Ç—É", callback_data=f'gnc{uin}'),
                ],
                [
                    InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –∫–∞—Ä—Ç—É", callback_data=f'glch{uin}'),
                ],
            ],
        )
        return builder.attach(InlineKeyboardBuilder.from_markup(page))
    else:
        page = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å —Å–ª–µ–¥—É—é—â—É—é –∫–∞—Ä—Ç—É", callback_data=f'gnc{uin}'),
                ],
                [
                    InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –∫–∞—Ä—Ç—É", callback_data=f'glch{uin}'),
                ],
                [
                    InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â—É—é –∫–∞—Ä—Ç—É", callback_data=f'gdl{uin}{nxt}{prv}')
                ],
            ],
        )
        return builder.attach(InlineKeyboardBuilder.from_markup(page))

def settings(politics, lang):
    builder = InlineKeyboardBuilder()
    if politics == 1:
        builder.button(text='–ò–º—è/–§–∞–º–∏–ª–∏—è', callback_data='name/last') if lang == 'RU' else builder.button(text='Name/Surname', callback_data='name/last')
        builder.button(text='–í–æ–∑—Ä–∞—Å—Ç', callback_data='age') if lang == 'RU' else builder.button(text='Age', callback_data='age')
        builder.button(text='–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ‚òéÔ∏è', callback_data='phone') if lang == 'RU' else builder.button(text='Phone number ‚òéÔ∏è', callback_data='phone')
        builder.button(text='–ü–æ—á—Ç–∞ üì®', callback_data='email') if lang == 'RU' else builder.button(text='E-mail üì®', callback_data='email')
        builder.button(text='–ö–∞–∫ –≤—ã —É–∑–Ω–∞–ª–∏ –æ –∫–æ–º–ø–∞–Ω–∏–∏ –¢–í–û–†–ï–¶?', callback_data='poll') if lang == 'RU' else builder.button(text='How did you find out about the TVOREC?', callback_data='poll')
        builder.adjust(2, 2, 1)
        land_builder = InlineKeyboardBuilder()
        land_builder.button(text='–†—É—Å/RU üá∑üá∫', callback_data='lang_RU')
        land_builder.button(text='–ê–Ω–≥–ª/EN üá¨üáß', callback_data='lang_EN')
        land_builder.button(text='–£–±—Ä–∞—Ç—å –º–µ–Ω—é ‚ùå', callback_data='setdestroy') if lang == 'RU' else land_builder.button(text='Close settings ‚ùå', callback_data='setdestroy')
        land_builder.adjust(2, 1)
        builder.attach(land_builder)
    else:
        builder.button(text='–°–æ–≥–ª–∞—Å–µ–Ω ‚úÖ', callback_data='polit') if lang == 'RU' else builder.button(text='I agree ‚úÖ', callback_data='polit')
    return builder.as_markup()


materials = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text='–ü–µ–Ω–æ–ø–ª–∞—Å—Ç', callback_data='&styrofoam'),
                InlineKeyboardButton(text='–ü–æ—Ç–æ–ª–æ—á–Ω–∞—è –ø–ª–∏—Ç–∫–∞', callback_data='&roof'),

            ],
            [
                InlineKeyboardButton(text='–≠–∫—Å—Ç—Ä—É–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–µ–Ω–æ–ø–æ–ª–∏—Å—Ç–µ—Ä–æ–ª', callback_data='&expanded'),
            ],
            [
                InlineKeyboardButton(text='–ì—Ä—É–Ω—Ç', callback_data='&priming'),
                InlineKeyboardButton(text='–ê–∫—Ä–∏–ª–æ–≤–∞—è –∫—Ä–∞—Å–∫–∞', callback_data='&acrylic'),
            ],
            [
                InlineKeyboardButton(text='–õ–∞–∫', callback_data='&varnish'),
                InlineKeyboardButton(text='–ö–ª–µ–π', callback_data='&glue'),
            ],
            [
                InlineKeyboardButton(text='–î—Ä—É–≥–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã', callback_data='&materials'),
            ],
            [
                InlineKeyboardButton(text='–ó–∞–≤–µ—Ä—à–∏—Ç—å –≤—ã–±–æ—Ä –º–∞—Ç–µ—Ä–∏–∞–ª–∞ ‚úÖ', callback_data='save'),
            ],
        ])

materials_eng = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text='Styrofoam', callback_data='&styrofoam'),
                InlineKeyboardButton(text='Ceiling tiles', callback_data='&roof'),

            ],
            [
                InlineKeyboardButton(text='Extruded polystyrene foam', callback_data='&expanded'),
            ],
            [
                InlineKeyboardButton(text='Primer', callback_data='&priming'),
                InlineKeyboardButton(text='Acrylic paint', callback_data='&acrylic'),
            ],
            [
                InlineKeyboardButton(text='Varnish', callback_data='&varnish'),
                InlineKeyboardButton(text='Glue', callback_data='&glue'),
            ],
            [
                InlineKeyboardButton(text='Other materials', callback_data='&materials'),
            ],
            [
                InlineKeyboardButton(text='Complete ‚úÖ', callback_data='save'),
            ],
        ])

def calculator_choose_mat(new_state, lang):
    builder = InlineKeyboardBuilder()
    if lang == 'RU':
        if new_state[1] == 'styrofoam':
            builder.button(text='üîò–ü–µ–Ω–æ–ø–ª–∞—Å—Ç', callback_data='&styrofoam')
        else:
            builder.button(text='–ü–µ–Ω–æ–ø–ª–∞—Å—Ç', callback_data='&styrofoam')
        if new_state[3] == 'roof':
            builder.button(text='üîò–ü–æ—Ç–æ–ª–æ—á–Ω–∞—è –ø–ª–∏—Ç–∫–∞', callback_data='&roof')
        else:
            builder.button(text='–ü–æ—Ç–æ–ª–æ—á–Ω–∞—è –ø–ª–∏—Ç–∫–∞', callback_data='&roof')
        if new_state[2] == 'expanded':
            builder.button(text='üîò–≠–∫—Å—Ç—Ä—É–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–µ–Ω–æ–ø–æ–ª–∏—Å—Ç–µ—Ä–æ–ª', callback_data='&expanded')
        else:
            builder.button(text='–≠–∫—Å—Ç—Ä—É–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–µ–Ω–æ–ø–æ–ª–∏—Å—Ç–µ—Ä–æ–ª', callback_data='&expanded')
        if new_state[5] == 'priming':
            builder.button(text='üîò–ì—Ä—É–Ω—Ç', callback_data='&priming')
        else:
            builder.button(text='–ì—Ä—É–Ω—Ç', callback_data='&priming')
        if new_state[6] == 'acrylic':
            builder.button(text='üîò–ê–∫—Ä–∏–ª–æ–≤–∞—è –∫—Ä–∞—Å–∫–∞', callback_data='&acrylic')
        else:
            builder.button(text='–ê–∫—Ä–∏–ª–æ–≤–∞—è –∫—Ä–∞—Å–∫–∞', callback_data='&acrylic')
        if new_state[7] == 'varnish':
            builder.button(text='üîò–õ–∞–∫', callback_data='&varnish')
        else:
            builder.button(text='–õ–∞–∫', callback_data='&varnish')
        if new_state[4] == 'glue':
            builder.button(text='üîò–ö–ª–µ–π', callback_data='&glue')
        else:
            builder.button(text='–ö–ª–µ–π', callback_data='&glue')
        if new_state[8] == 'materials':
            builder.button(text='üîò–î—Ä—É–≥–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã', callback_data='&materials')
        else:
            builder.button(text='–î—Ä—É–≥–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã', callback_data='&materials')
        builder.button(text='–ó–∞–≤–µ—Ä—à–∏—Ç—å –≤—ã–±–æ—Ä –º–∞—Ç–µ—Ä–∏–∞–ª–∞ ‚úÖ', callback_data='save')
        builder.adjust(2, 1, 2, 2, 1, 1)
        return builder.as_markup()
    else:
        if new_state[1] == 'styrofoam':
            builder.button(text='üîòStyrofoam', callback_data='&styrofoam')
        else:
            builder.button(text='Styrofoam', callback_data='&styrofoam')
        if new_state[3] == 'roof':
            builder.button(text='üîòCeiling tiles', callback_data='&roof')
        else:
            builder.button(text='Ceiling tiles', callback_data='&roof')
        if new_state[2] == 'expanded':
            builder.button(text='üîòExtruded polystyrene foam', callback_data='&expanded')
        else:
            builder.button(text='Extruded polystyrene foam', callback_data='&expanded')
        if new_state[5] == 'priming':
            builder.button(text='üîòPrimer', callback_data='&priming')
        else:
            builder.button(text='Primer', callback_data='&priming')
        if new_state[6] == 'acrylic':
            builder.button(text='üîòAcrylic paint', callback_data='&acrylic')
        else:
            builder.button(text='Acrylic paint', callback_data='&acrylic')
        if new_state[7] == 'varnish':
            builder.button(text='üîòVarnish', callback_data='&varnish')
        else:
            builder.button(text='Varnish', callback_data='&varnish')
        if new_state[4] == 'glue':
            builder.button(text='üîòGlue', callback_data='&glue')
        else:
            builder.button(text='Glue', callback_data='&glue')
        if new_state[8] == 'materials':
            builder.button(text='üîòOther materials', callback_data='&materials')
        else:
            builder.button(text='Other materials', callback_data='&materials')
        builder.button(text='Complete ‚úÖ', callback_data='save')
        builder.adjust(2, 1, 2, 2, 1, 1)
        return builder.as_markup()
def admin_change_level_key(admin_id, menu, gallery, mailing, statistics):
    builder = InlineKeyboardBuilder()
    if menu == '1':
            builder.button(text='üîò –î–æ—Å—Ç—É–ø –∫ –∫–∞—Ä—Ç–æ—á–∫–∞–º —Ç–æ–≤–∞—Ä–∞ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º', callback_data=f'adm:card:{admin_id}')
    else:
            builder.button(text='–î–æ—Å—Ç—É–ø –∫ –∫–∞—Ä—Ç–æ—á–∫–∞–º —Ç–æ–≤–∞—Ä–∞ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º', callback_data=f'adm:card:{admin_id}')
    if gallery == '1':
        builder.button(text='üîò –î–æ—Å—Ç—É–ø –∫ –≥–∞–ª–µ—Ä–µ–µ', callback_data=f'adm:gall:{admin_id}')
    else:
        builder.button(text='–î–æ—Å—Ç—É–ø –∫ –≥–∞–ª–µ—Ä–µ–µ', callback_data=f'adm:gall:{admin_id}')
    if mailing == '1':
            builder.button(text='üîò –î–æ—Å—Ç—É–ø –∫ —Ä–∞—Å—Å—ã–ª–∫–µ', callback_data=f'adm:mail:{admin_id}')
    else:
            builder.button(text='–î–æ—Å—Ç—É–ø –∫ —Ä–∞—Å—Å—ã–ª–∫–µ', callback_data=f'adm:mail:{admin_id}')
    if statistics == '1':
        builder.button(text='üîò –î–æ—Å—Ç—É–ø –∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ', callback_data=f'adm:stat:{admin_id}')
    else:
        builder.button(text='–î–æ—Å—Ç—É–ø –∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ', callback_data=f'adm:stat:{admin_id}')
    builder.button(text='–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è ‚úÖ', callback_data=f'adm:stop')
    builder.adjust(1)
    return builder.as_markup()